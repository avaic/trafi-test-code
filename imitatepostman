import requests
from sys import argv
from polyline.codec import PolylineCodec
import gmplot

# parse input, which is of the form lat_1 lng_1 lat_2 lng_2 lat_3 lng_3 lat_4 lng_4 ...
lat_coord = list(map(float, argv[1::2]))
lng_coord = list(map(float, argv[2::2]))



# finds polyline between two points and decodes it
def find_polyline(lat_from, lng_from, lat_to, lng_to):
    data = '{"From":{"Lat":%f,"Lng":%f,"TeleportRadius":25.0},"To":[{"Lat":%f,"Lng":%f,"TeleportRadius":25.0}]}' %(lat_from, lng_from, lat_to, lng_to)
    r = requests.post('http://walk-api.trafi.com:8080/driving-directions', data)
    if r.json():
        encoded_line = r.json()['points']
        return PolylineCodec().decode(encoded_line)


# we save a list of polylines, initialize with the starting position
# finds polylines between consecutive points and adds to polylines list. The first point of each segment is excluded to avoid overlap between consecutive segments
def find_multiple_polylines(lat_list, lng_list):
    x_from, y_from = lat_list.pop(0),lng_list.pop(0)
    polylines = [[(x_from, y_from)]]
    for x_to, y_to in zip(lat_coord,lng_coord):
        if find_polyline(x_from, y_from, x_to, y_to):
            polylines.append(find_polyline(x_from, y_from, x_to, y_to)[1:])
            x_from, y_from = x_to, y_to
        else:
            raise Exception('There is no way between these points.')
    return polylines


if __name__ == "__main__":
    polyline = []

    # out of many segments of polylines make a single polyline
    for i in find_multiple_polylines(lat_coord, lng_coord):
        polyline += i

    gmap = gmplot.GoogleMapPlotter(37.428, -122.145, 16)
    gmap.plot(latitudes, longitudes)
    #polyline = PolylineCodec().encode(polyline)

    print(polyline)